<%
%><%@include "includes.csp"
%><%
#include "ejudge/userlist.h"
#include "ejudge/userlist_clnt.h"
#include "ejudge/userlist_proto.h"
%><%
extern const unsigned char * const ss_reg_status_strs[];
%><%@set getter_name = "csp_get_user_sel_view_passwd_page"
%><%@set ac_prefix = "SSERV_CMD_"
%><%@set err_prefix = "SSERV_ERR_"
%><%@page csp_view_user_sel_view_passwd_page(PageInterface *pg, FILE *log_f, FILE *out_f, struct http_request_info *phr)
%><%@include "stdvars.csp"
%><%
    const unsigned char *title = NULL;
    unsigned char subtitle_buf[1024];
    const unsigned char *subtitle = subtitle_buf;
    int contest_id = 0;
    int group_id = 0;
    unsigned char *marked_str = NULL;
    bitset_t marked = BITSET_INITIALIZER;
    opcap_t gcaps = 0, caps = 0;
    int r;
    unsigned char *xml_text = NULL;
    struct userlist_list *users = NULL;
    int cnts_mode = 0;
    int user_id = 0;
    const struct userlist_user *u = NULL;
    const struct userlist_contest *reg = NULL;
    const struct userlist_user_info *ui = NULL;
    int serial = 0;
    int allowed = 0;
    int passwd_method = 0;
    const unsigned char *passwd;
    const unsigned char *s = NULL;

    int other_user_id = 0; // needed for users_top_menu.csp

    %><s:read name="contest_id" default="0" /><%
    %><s:read name="group_id" default="0" /><%
    marked_str = ss_collect_marked_set(phr, &marked);

    if (contest_id < 0) contest_id = 0;
    if (contest_id > 0) {
        if (contests_get(contest_id, &cnts) < 0 || !cnts) contest_id = 0;
    }
    if (group_id < 0) group_id = 0;

    if (phr->action == SSERV_CMD_USER_SEL_VIEW_CNTS_PASSWD_PAGE) cnts_mode = 1;

  /* check permissions */
    switch (phr->action) {
    case SSERV_CMD_USER_SEL_VIEW_PASSWD_PAGE:
        ss_get_global_caps(phr, &gcaps);
        if (cnts) ss_get_contest_caps(phr, cnts, &caps);
        caps |= gcaps;
        break;
    case SSERV_CMD_USER_SEL_VIEW_CNTS_PASSWD_PAGE:
        if (!cnts) FAIL(SSERV_ERR_INV_CONTEST);
        if (cnts->disable_team_password) FAIL(SSERV_ERR_INV_CONTEST);
        ss_get_global_caps(phr, &gcaps);
        ss_get_contest_caps(phr, cnts, &caps);
        caps |= gcaps;
        break;
    default:
        abort();
    }
    if (opcaps_check(caps, OPCAP_GET_USER) < 0) FAIL(SSERV_ERR_PERM_DENIED);
    if (opcaps_check(caps, OPCAP_PRIV_EDIT_PASSWD) < 0 && opcaps_check(caps, OPCAP_EDIT_PASSWD) < 0) FAIL(SSERV_ERR_PERM_DENIED);

    if (!phr->userlist_clnt) FAIL(SSERV_ERR_DB_ERROR);
    r = userlist_clnt_list_users_2(phr->userlist_clnt, ULS_LIST_ALL_USERS_4,
                                   contest_id, group_id, marked_str, 0, 0,
                                   // FIXME: fill the fields
                                   -1 /* page */, -1 /* sort_field */, 0 /* sort_order */,
                                   -1 /* filter_field */, 0 /* filter_op */,
                                   &xml_text);
    if (r < 0) FAIL(SSERV_ERR_DB_ERROR);
    users = userlist_parse_str(xml_text);
    if (!users) FAIL(SSERV_ERR_DB_ERROR);

    switch (phr->action) {
    case SSERV_CMD_USER_SEL_VIEW_PASSWD_PAGE:
        snprintf(subtitle_buf, sizeof(subtitle_buf), "View registration passwords");
        break;
    case SSERV_CMD_USER_SEL_VIEW_CNTS_PASSWD_PAGE:
        snprintf(subtitle_buf, sizeof(subtitle_buf), "View contest passwords in contest %d", contest_id);
        break;
    default:
        abort();
    }

%><%@include "header.csp"
%>

<h2><s:v value="subtitle_buf" /></h2>
<%
    if (cnts && cnts->name) {
%>
<h2>Contest <s:v value="cnts->id" />: <s:v value="cnts->name" /></h2>
<%
    }
%>
<br/>

<%@include "users_top_menu.csp"
%>

<table class="b1">
  <tr>
    <th class="b1">NN</th>
    <th class="b1">User ID</th>
    <th class="b1">Login</th>
    <th class="b1"><% if (cnts_mode) { %>Contest password<% } else { %>Registration password<% } %></th>
<%
    if (cnts) {
%>
    <th class="b1">Name</th>
    <th class="b1">Status</th>
    <th class="b1">Flags</th>
    <th class="b1">Location</th>
    <th class="b1">Printer name</th>
<%
    }
%>
  </tr>
<%
    for (user_id = 1, serial = 0; user_id < marked.size; ++user_id) {
        if (!bitset_get(&marked, user_id)) continue;
        if (user_id >= users->user_map_size) continue;
        if (!(u = users->user_map[user_id])) continue;
        ui = u->cnts0;
        reg = NULL;
        if (cnts) {
            reg = userlist_get_user_contest(u, contest_id);
            if (!reg) continue;
        }
%>
  <tr>
    <td class="b1"><s:v value="++serial" /></td>
    <td class="b1"><s:v value="user_id" /></td>
    <td class="b1"><s:v value="u->login" /></td>
    <td class="b1">
<%
        allowed = 0;
        passwd_method = -1;
        passwd = 0;
        switch (phr->action) {
        case SSERV_CMD_USER_SEL_VIEW_PASSWD_PAGE:
            if (ss_is_globally_privileged(phr, u)) {
                if (opcaps_check(gcaps, OPCAP_PRIV_EDIT_PASSWD) >= 0) allowed = 1;
            } else if (cnts && ss_is_contest_privileged(cnts, u)) {
                if (opcaps_check(caps, OPCAP_PRIV_EDIT_PASSWD) >= 0) allowed = 1;
            } else {
                if (opcaps_check(caps, OPCAP_EDIT_PASSWD) >= 0) allowed = 1;
            }
            if (allowed) {
                passwd_method = u->passwd_method;
                passwd = u->passwd;
            }
            break;
        case SSERV_CMD_USER_SEL_VIEW_CNTS_PASSWD_PAGE:
            if (ss_is_globally_privileged(phr, u)) {
                if (opcaps_check(gcaps, OPCAP_PRIV_EDIT_PASSWD) >= 0) allowed = 1;
            } else if (ss_is_contest_privileged(cnts, u)) {
                if (opcaps_check(caps, OPCAP_PRIV_EDIT_PASSWD) >= 0) allowed = 1;
            } else {
                if (opcaps_check(caps, OPCAP_EDIT_PASSWD) >= 0) allowed = 1;
            }
            if (allowed && ui) {
                passwd_method = ui->team_passwd_method;
                passwd = ui->team_passwd;
            }
            break;
        default:
            break;
        }
        if ((reg->flags & ~USERLIST_UC_INCOMPLETE)) {
            allowed = 0;
        }
%>
<%
        if (!allowed) {
%><i>hidden</i><%
        } else if (passwd_method < 0 || !passwd) {
%><i>null</i><%
        } else if (passwd_method == USERLIST_PWD_SHA1 || passwd_method == USERLIST_PWD_SHA256) {
%><i>changed</i><%
        } else if (passwd_method == USERLIST_PWD_PLAIN) {
%><tt><s:v value="passwd"/></tt><%
        } else {
%><i>unknown</i><%
        }
%>
    </td>
<%
        if (cnts) {
%>
    <td class="b1"><% if (ui && ui->name && *ui->name) { %><s:v value="ui->name" /><% } else { %><s:v value="u->login" /><% } %></td>
    <td class="b1"><%
            if (cnts && reg) {
                r = reg->status;
                if (r < 0 || r >= USERLIST_REG_LAST) r = USERLIST_REG_LAST;
                    %><s:v value="ss_reg_status_strs[r]" escape="no" /><%
                } else {
                    %>&nbsp;<%
            }%></td>
    <td class="b1"><%
            s = "";
            if (ss_is_privileged(phr, cnts, u)) {
                %><s:v value="s" escape="no"/>privileged<%
                s = ", ";
            }
            if (cnts && reg) {
                if ((reg->flags & USERLIST_UC_INVISIBLE)) {
                    %><s:v value="s" escape="no"/>invisible<%
                    s = ", ";
                }
                if ((reg->flags & USERLIST_UC_BANNED)) {
                    %><s:v value="s" escape="no"/>banned<%
                    s = ", ";
                }
                if ((reg->flags & USERLIST_UC_LOCKED)) {
                    %><s:v value="s" escape="no"/>locked<%
                    s = ", ";
                }
                if ((reg->flags & USERLIST_UC_DISQUALIFIED)) {
                    %><s:v value="s" escape="no"/>disqualified<%
                    s = ", ";
                }
                if ((reg->flags & USERLIST_UC_PRIVILEGED)) {
                    %><s:v value="s" escape="no"/>privileged<%
                    s = ", ";
                }
                if ((reg->flags & USERLIST_UC_REG_READONLY)) {
                    %><s:v value="s" escape="no"/>reg. read-only<%
                    s = ", ";
                }
            }
            if (!*s) {
                %>&nbsp;<%
            }%></td>
    <td class="b1"><% if (ui && ui->location) { %><s:v value="ui->location" /><% } else { %>&nbsp;<% } %></td>
    <td class="b1"><% if (ui && ui->printer_name) { %><s:v value="ui->printer_name" /><% } else { %>&nbsp;<% } %></td>
<%
        }
%>
  </tr>
<%
    }
%>
</table>

<%@include "footer.csp"
%><%
cleanup:
    l10n_resetlocale();
    html_armor_free(&ab);
    xfree(marked_str);
    bitset_free(&marked);
    xfree(xml_text);
    userlist_free(&users->b);
%>
