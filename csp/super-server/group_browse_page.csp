<%
%><%@include "includes.csp"
%><%
#include "ejudge/userlist_proto.h"
#include "ejudge/userlist_clnt.h"
#include "ejudge/userlist.h"
%><%@set getter_name = "csp_get_group_browse_page"
%><%@set ac_prefix = "SSERV_CMD_"
%><%@page csp_view_group_browse_page(PageInterface *pg, FILE *log_f, FILE *out_f, struct http_request_info *phr)
%><%@include "stdvars.csp"
%><%
    const unsigned char *title = NULL;
    const unsigned char *subtitle = "browsing groups";
    opcap_t gcaps = 0;
    const unsigned char *group_filter = NULL;
    int group_offset = 0;
    int group_count = 20;
    unsigned char *xml_text = NULL;
    struct userlist_list *users = NULL;
    int r;
    int min_group_id = INT_MAX;
    int max_group_id = 0;
    const struct userlist_group *g;
    int serial;

    const unsigned char *marked_str = NULL; // needed for users_top_menu.csp
    int contest_id = 0;                     // needed for users_top_menu.csp
    int group_id = 0;                       // needed for users_top_menu.csp
    int other_user_id = 0;                  // needed for users_top_menu.csp

    if (ss_get_global_caps(phr, &gcaps) < 0 && opcaps_check(gcaps, OPCAP_LIST_USERS) < 0) {
        FAIL(SSERV_ERR_PERM_DENIED);
    }

%><%@include "header.csp"
%>

<h2>Groups</h2>

<%@include "users_top_menu.csp"
%>

<%
    if (!phr->userlist_clnt) {
%>
<hr/>
<h2>Error</h2>
<pre>No connection to the server!</pre>
<%
        goto do_footer;
    }
%>
<%
    if (phr->ss->group_filter_set) {
        group_filter = phr->ss->group_filter;
        group_offset = phr->ss->group_offset;
        group_count = phr->ss->group_count;
    }
%>
<%
    r = userlist_clnt_list_users_2(phr->userlist_clnt, ULS_LIST_ALL_GROUPS_2,
                                   0, 0, group_filter, group_offset, group_count,
                                   // FIXME: fill the fields
                                   -1 /* page */, -1 /* sort_field */, 0 /* sort_order */,
                                   -1 /* filter_field */, 0 /* filter_op */,
                                   &xml_text);
    if (r < 0) {
%>
<hr/><h2>Error</h2>
<pre>Cannot get user list: <s:v value="userlist_strerror(-r)" escape="no"/></pre>
<%
        goto do_footer;
    }
    users = userlist_parse_str(xml_text);
    if (!users) {
%>
<hr/><h2>Error</h2>
<pre>XML parse error</pre>
<%
        goto do_footer;
    }
    for (group_id = 1; group_id < users->group_map_size; ++group_id) {
        if (!(g = users->group_map[group_id])) continue;
        if (group_id >= max_group_id) max_group_id = group_id;
        if (group_id <= min_group_id) min_group_id = group_id;
    }
%>

<s:form>
  <s:hidden name="min_group_id" check="no" />
  <s:hidden name="max_group_id" check="no" />

  <table class="b0">
<!--
    <tr>
      <td class="b0">Filter:</td>
      <td class="b0"><s:textfield name="group_filter" size="50" value="group_filter" checkExpr="" /></td>
    </tr>
-->
    <tr>
      <td class="b0">Offset:</td>
      <td class="b0"><s:textfield name="group_offset" size="10" value="group_offset" fullCheckExpr="phr->ss->group_filter_set" /></td>
    </tr>
    <tr>
      <td class="b0">Count:</td>
      <td class="b0"><s:textfield name="group_count" size="10" value="group_count" fullCheckExpr="phr->ss->group_filter_set" /></td>
    </tr>
    <tr>
      <td>&nbsp;</td>
      <td><s:submit ac="group-filter-change-action" text="Change" /></td>
    </tr>
  </table>

  <table class="b0">
    <tr>
      <td class="b0"><s:submit ac="group-filter-first-page-action" text="&lt;&lt;" /></td>
      <td class="b0"><s:submit ac="group-filter-prev-page-action" text="&lt;" /></td>
      <td class="b0"><s:submit ac="group-filter-next-page-action" text="&gt;" /></td>
      <td class="b0"><s:submit ac="group-filter-last-page-action" text="&gt;&gt;" /></td>
    </tr>
  </table>

  <table class="b1">
    <tr>
      <th class="b1">NN</th>
      <th class="b1">Group Id</th>
      <th class="b1">Group Name</th>
      <th class="b1">Description</th>
      <th class="b1">Operations</th>
    </tr>

<%
    serial = group_offset - 1;
    for (group_id = 1; group_id < users->group_map_size; ++group_id) {
        if (!(g = users->group_map[group_id])) continue;
        ++serial;
%>
    <tr>
      <td class="b1"><s:v value="serial" /></td>
      <td class="b1"><s:v value="group_id" /></td>
      <td class="b1"><s:v value="g->group_name" checkExpr="" defstr="<i>NULL</i>" /></td>
      <td class="b1"><s:v value="g->description" checkExpr="" defstr="<i>NULL</i>" /></td>
      <td class="b1">
        <s:url name="ModifyUrl" ac="group-modify-page">
          <s:param name="group_id" value="group_id" />
        </s:url>
        [<s:a url="ModifyUrl">Modify</s:a>]
        <s:url name="MembersUrl" ac="user-browse-page">
          <s:param name="group_id" value="group_id" />
        </s:url>
        [<s:a url="MembersUrl">Members</s:a>]
        <s:url name="DeleteUrl" ac="group-delete-page">
          <s:param name="group_id" value="group_id" />
        </s:url>
        [<s:a url="DeleteUrl">Delete</s:a>]
      </td>
    </tr>
<%
    }
%>
  </table>
</s:form>

<%
    if (opcaps_check(gcaps, OPCAP_CREATE_USER) >= 0) {
%>
<table class="b0">
  <tr>
    <td class="b0"><s:a ac="group-create-page">[Create]</s:a></td>
  </tr>
</table>
<%
    }
%>

<%
do_footer:;
%>

<%@include "footer.csp"
%><%
cleanup:
    if (users) userlist_free(&users->b);
    xfree(xml_text);
    l10n_resetlocale();
    html_armor_free(&ab);
%>
